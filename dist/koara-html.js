(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.koaraHtml = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
module.exports = require('./lib/koara-html');

},{"./lib/koara-html":2}],2:[function(require,module,exports){
"use strict";

var used = [],
    exports = module.exports = {};

exports.Html5Renderer = require("./koara/html/html5renderer");

},{"./koara/html/html5renderer":3}],3:[function(require,module,exports){
"use strict";

function Html5Renderer() {
	this.out = "";
}

Html5Renderer.prototype = {
	constructor: Html5Renderer,
	partial: true,

	visitDocument: function(node) {
		this.out = "";
		this.level = 0;
		this.listSequence = [];
		this.hardWrap = false;
		node.childrenAccept(this);
	},

	visitHeading: function(node) {
		this.indent();
		this.out += "<h" + 	node.value + ">";
		node.childrenAccept(this);
		this.out += "</h" + node.value + ">\n";
		if (!node.isNested()) {
            this.out += "\n";
        }
	},

	visitBlockQuote: function(node) {
		this.indent();
		this.out += "<blockquote>";
		if (node.children && node.children.length > 0) {
            this.out += "\n";
		}
        this.level++;
        node.childrenAccept(this);
        this.level--;
        this.indent();
        this.out += "</blockquote>\n";
        if (!node.isNested()) {
           this.out += "\n";
        }
	},

	visitListBlock: function(node) {
		this.listSequence.push(0);
		var tag = node.ordered ? "ol" : "ul";

		this.indent();
		this.out += "<" + tag + ">\n";
		this.level++;
		node.childrenAccept(this);
		this.level--;
		this.indent();
		this.out += "</" + tag + ">\n";
		if (!node.isNested()) {
            this.out += "\n";
		}
		this.listSequence.pop();
	},

	visitListItem: function(node) {
		var seq = Number(this.listSequence[this.listSequence.length - 1]) + 1;

		this.listSequence[this.listSequence.length - 1] = seq;

		this.indent();
        this.out += "<li";
		if (node.number && (seq !== Number(node.number))) {
			this.out += " value=\"" + node.number + "\"";
			this.listSequence.push(node.number);
		}
		this.out += ">";
		if (node.children && node.children.length > 0) {
			var block = (node.children[0].constructor.name === "Paragraph" || node.children[0].constructor.name === "BlockElement");

			if (node.children.length > 1 || !block) {
                this.out += "\n";
            }
			this.level++;
			node.childrenAccept(this);
			this.level--;
			if (node.children.length > 1 || !block) {
				this.indent();
			}
		}
		this.out += "</li>\n";
	},

	visitCodeBlock: function(node) {
		this.indent();
		this.out += "<pre><code";
		if (node.language) {
			this.out += " class=\"language-" + this.escape(node.language) + "\"";
		}
		this.out += ">";
		this.out += this.escape(node.value) + "</code></pre>\n";
		if (!node.isNested()) {
            this.out += "\n";
        }
	},

	visitParagraph: function(node) {
		if (node.isNested() && (node.parent.constructor.name === "ListItem") && node.isSingleChild()) {
			node.childrenAccept(this);
		} else {
			this.indent();
			this.out += "<p>";
			node.childrenAccept(this);
			this.out += "</p>\n";

			if (!node.isNested()) {
				this.out += "\n";
			}
		}
	},

	visitBlockElement: function(node) {
		if (node.isNested() && (node.parent.constructor.name === "ListItem") && node.isSingleChild()) {
			node.childrenAccept(this);
		} else {
			this.indent();
			node.childrenAccept(this);
			if (!node.isNested()) {
				this.out += "\n";
			}
		}
	},

	visitImage: function(node) {
		this.out += "<img src=\"" + this.escapeUrl(node.value) + "\" alt=\"";
		node.childrenAccept(this);
		this.out += "\" />";
	},

	visitLink: function(node) {
		this.out += "<a href=\"" + this.escapeUrl(node.value.toString()) + "\">";
		node.childrenAccept(this);
		this.out += "</a>";
	},

	visitStrong: function(node) {
		this.out += "<strong>";
		node.childrenAccept(this);
		this.out += "</strong>";
	},

	visitEm: function(node) {
		this.out += "<em>";
		node.childrenAccept(this);
		this.out += "</em>";
	},

	visitCode: function(node) {
		this.out += "<code>";
		node.childrenAccept(this);
		this.out += "</code>";
	},

	visitText: function(node) {
		this.out += this.escape(node.value);
	},

	visitLineBreak: function(node) {
		if(this.hardWrap || node.explicit) {
			this.out += "<br>";
		}
		this.out += "\n";
		this.indent();
		node.childrenAccept(this);
	},

	escapeUrl: function(text) {
        return text.replace(/ /gm, "%20").
            replace(/\"/gm, "%22").
            replace(/`/gm, "%60").
            replace(/</gm, "%3C").
            replace(/>/gm, "%3E").
            replace(/\[/gm, "%5B").
            replace(/\]/gm, "%5D").
            replace(/\\/gm, "%5C");
	},

	indent: function() {
		var repeat = this.level * 2;

		for (var i = repeat - 1; i >= 0; i--) {
			this.out += " ";
		}
	},

	escape: function(text) {
		return text.replace(/&/gm, "&amp;").
            replace(/</gm, "&lt;").
            replace(/>/gm, "&gt;").
            replace(/\"/gm, "&quot;");
	},

	getOutput: function() {
		if (!this.partial) {
			var wrapper = "<!DOCTYPE html>\n";

			wrapper += "<html>\n";
			wrapper += "  <body>\n";
			wrapper += this.out.trim().replace(/^/, "    ") + "\n";
			wrapper += "  </body>\n";
			wrapper += "</html>\n";
			return wrapper;
		}
        return this.out.trim();
	}

};

module.exports = Html5Renderer;

},{}]},{},[1])(1)
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
